#!/bin/bash

## TODO: unfinished

set -e
cd ..
source common

## Not required for public wiki.
#./login

[[ -v wiki_target_api ]] || wiki_target_api="https://www.whonix.org/w/api.php"

## https://www.mediawiki.org/wiki/Manual:Namespace
[[ -v wiki_namespace_list ]] || wiki_namespace_list="0 2 4 6 8 10 12 14"

rm -f "$TMPFOLDER/allpages.txt"

for wiki_namespace_item in $wiki_namespace_list ; do
   echo "wiki_namespace_item: $wiki_namespace_item"

   api_continue_or_not=""

   while true ; do
      all_pages=$(curl --fail --silent "${wiki_target_api}?action=query&format=json&list=allpages&aplimit=500&apnamespace=${wiki_namespace_item}&apcontinue=${api_continue_or_not}")

      #echo "$all_pages" | jq -r ".query.allpages[] | {title: .title}| .title"

      echo "$all_pages" | jq -r ".query.allpages[] | .title | @sh" | tee -a "${TMPFOLDER}/allpages.txt" >/dev/null

      if ! api_continue_or_not=$(echo "$all_pages" | jq -r ".continue | .apcontinue") ; then
         break
      fi
      if [ "$api_continue_or_not" = "null" ]; then
         break
      fi
   done
done

test -f "$TMPFOLDER/allpages.txt"
result_test="$(cat "${TMPFOLDER}/allpages.txt")"
if [ "$result_test" = "" ]; then
   echo "$0 ERROR: result_test is empty!"
   exit 1
fi

## site-specific sanity test
## Should be disabled by other users.
# if echo "$result_test" | grep -q "ZeroNet" ; then
#    true "OK"
# else
#    echo "$0 ERROR: See script source code. result_test does not contain ZeroNet!"
#    exit 1
# fi

while IFS=\n read -r item_from_all_pages ; do
   page_item="$item_from_all_pages"
   ## remove last letter ("'")
   page_item="${page_item::-1}"
   ## remove first letter ("'")
   page_item="${page_item:1}"

   echo "page_item: $page_item"

   search="/"
   replace="%2F"
   backup_filename_item=$(echo "$page_item" | str_replace "$search" "$replace")

   echo "backup_filename_item: $backup_filename_item"

done < "${TMPFOLDER}/allpages.txt"
