#!/bin/bash

echo "$0: START"

#set -x
set -e

## example:
#[[ -v SOURCE_WIKI_URL ]] || SOURCE_WIKI_URL='https://www.whonix.org/w'

## XXX
source /usr/share/mediawiki-shell/common

## These variables should be set by the calling script as environment variables.
[[ -v SOURCE_WIKI_URL ]] || missing_variable missing variable SOURCE_WIKI_URL! For example: SOURCE_WIKI_URL='https://www.whonix.org/w' $0
[[ -v SOURCE_TARGET_API ]] || SOURCE_TARGET_API="${SOURCE_WIKI_URL}/api.php"
[[ -v SOURCE_WIKI_URL ]] || missing_variable missing variable TMPFOLDER
[[ -v DESTINATION_WIKI_PAGE ]] || missing_variable missing variable DESTINATION_WIKI_PAGE! For example: DESTINATION_WIKI_PAGE=File:10b.png $0

## XXX
WIKI_URL="$SOURCE_WIKI_URL"
source /usr/share/mediawiki-shell/wiki-config

echo "$0: INFO: SOURCE_WIKI_URL      : $SOURCE_WIKI_URL"
echo "$0: INFO: SOURCE_TARGET_API    : $SOURCE_TARGET_API"
echo "$0: INFO: DESTINATION_WIKI_PAGE: $DESTINATION_WIKI_PAGE"

## XXX
#WIKI_URL="$SOURCE_WIKI_URL" mw-logout
#WIKI_URL="$SOURCE_WIKI_URL" mw-login

$curl \
   $curl_opts \
   "${SOURCE_TARGET_API}?format=json&action=query&prop=info%7Cflagged&titles=${DESTINATION_WIKI_PAGE}"


lastrevid=$(cat "$flagged_revs_api_info_result" | jq -r ".query.pages[].lastrevid")

if echo "$lastrevid" | grep -qE '^[0-9]+$'; then
    true "Valid number."
else
    echo "$0 ERROR: lastrev not numeric!" >&2
    exit 1
fi

$curl \
   $curl_opts \
   --cookie "$cookie_jar" \
   --cookie-jar "$cookie_jar" \
   --header "Content-Type: application/json" \
   --header "Accept-Language: en-GB" \
   --header "Connection: keep-alive" \
   --output "${TMPFOLDER}/csrf_token.json" \
   --request "POST" \
   "${SOURCE_TARGET_API}?action=query&meta=tokens&type=csrf&format=json"

echo "$0: INFO: Token received. ${TMPFOLDER}/csrf_token.json"

csrf_token=$(cat "${TMPFOLDER}/csrf_token.json" | jq --raw-output '.query.tokens.csrftoken')

## not login-token
#csrf_token=$(cat "${TMPFOLDER}/login-token.json" | jq --raw-output '.query.tokens.csrftoken')

## Sensitive?
#echo "INFO: XXX csrf_token: $csrf_token"

comment="mediawiki-shell-bot-flagged-revisions-mass-approve"

$curl \
   $curl_opts \
   --cookie "$cookie_jar" \
   --cookie-jar "$cookie_jar" \
   --output "${TMPFOLDER}/review-result.json" \
   --silent \
   --data-urlencode "token=${csrf_token}" \
   "${SOURCE_TARGET_API}?format=json&action=review&revid=${lastrevid}&flag_accuracy=1&comment=${comment}"

# $curl \
#    $curl_opts \
#    --cookie "$cookie_jar" \
#    --cookie-jar "$cookie_jar" \
#    --output "${TMPFOLDER}/review-result.json" \
#    --silent \
#    --data-urlencode "token=${csrf_token}" \
#    "${SOURCE_TARGET_API}?format=json&action=stabilize&title=${DESTINATION_WIKI_PAGE}&default=stable&&reason=${comment}"

review_result=$(cat "${TMPFOLDER}/review-result.json" | jq --raw-output '.review.result')

if [ "$review_result" = "Success" ]; then
   echo "$0: Success."
   exit 0
fi

echo "${TMPFOLDER}/review-result.json"
cat "${TMPFOLDER}/review-result.json" | jq

review_error_code=$(cat "${TMPFOLDER}/review-result.json" | jq --raw-output '.error.code')
if [ "$review_error_code" = "notreviewable" ]; then
   echo "$0: notreviewable"
   exit 0
fi

echo "$0: Error." >&2
exit 1
