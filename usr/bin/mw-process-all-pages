#!/bin/bash

error_out_maybe() {
   if [ "$wiki_error_on_fetch" = "true" ]; then
      ## error out
      return 1
   else
      ## ignore error
      return 0
   fi
}

echo "$0: START"

set -e

source /usr/share/mediawiki-shell/common
source /usr/share/mediawiki-shell/wiki-config

## example:
#[[ -v SOURCE_WIKI_URL ]] || SOURCE_WIKI_URL='https://www.whonix.org/w'

## These variables should be set by the calling script as environment variables.
[[ -v SOURCE_WIKI_URL ]] || missing_variable SOURCE_WIKI_URL
[[ -v wiki_script ]] || missing_variable wiki_script
[[ -v wiki_error_on_fetch ]] || wiki_error_on_fetch=true
[[ -v mw_api_start_from ]] || mw_api_start_from=""

## XXX
WIKI_URL="$SOURCE_WIKI_URL"

echo "$0: INFO: TMPFOLDER         : $TMPFOLDER"
echo "$0: INFO: SOURCE_WIKI_URL: $SOURCE_WIKI_URL"

# ## XXX
DESTINATION_WIKI_URL="$SOURCE_WIKI_URL"

## Not required for public wiki.
#mw-logout
#mw-login

## TODO: re-enable
allpages_file="${TMPFOLDER}/allpages.txt"
#rm -f "$allpages_file"
#log_run env QUERY_TYPE=allpages SOURCE_WIKI_URL="$SOURCE_WIKI_URL" mw-all-pages "$allpages_file"

test -r "$allpages_file"

counter_total="$(cat "$allpages_file" | wc -l)"

counter_currently=0
counter_chunk=0
chunk_max_size=10
pid_list=""
start_from_here="not-yet"

while IFS=$'\n' read -r item_from_all_pages ; do
   counter_currently=$(( $counter_currently + 1 ))
   backup_page_item=$(set_backup_page_item "$item_from_all_pages")
   backup_filename_item=$(set_backup_filename_item "$backup_page_item")

   ## XXX
   wiki_page_item="$backup_page_item"
   wiki_article_to_fetch="$backup_page_item"

   counter_chunk=$(( $counter_chunk + 1 ))

   ## TODO: hardcoded
   mw_api_start_from="Network_Time_Synchronization"

   if [ "$mw_api_start_from" = "" ]; then
      start_from_here=true
   else
      if [ "$backup_page_item" = "$mw_api_start_from" ]; then
         start_from_here=true
      fi
   fi

   if [ ! "$start_from_here" = "true" ]; then
      echo "SKIP: $counter_currently / $counter_total | counter_chunk: $counter_chunk | $backup_page_item | $backup_filename_item"
      continue
   fi
   echo "DO: $counter_currently / $counter_total | counter_chunk: $counter_chunk | $backup_page_item | $backup_filename_item"

   TMPFOLDER_SEPARATE="$TMPFOLDER/separate/$counter_currently"
   mkdir --parents "$TMPFOLDER_SEPARATE"

   log_run_background \
      env \
         counter_currently="$counter_currently" \
         counter_chunk="$counter_chunk" \
         TMPFOLDER="$TMPFOLDER_SEPARATE" \
         WIKI_URL="$SOURCE_WIKI_URL" \
         backup_page_item="$backup_page_item" \
         backup_filename_item="$backup_filename_item" \
         wiki_page_item="$wiki_page_item" \
         wiki_article_to_fetch="$wiki_article_to_fetch" \
         retry --times=5 --delay=3 $wiki_script

   pid_list+=" $pid"

   if [ "$counter_chunk" -ge "$chunk_max_size" ] || [ "$counter_currently" -ge "$counter_total" ] ; then
      counter_chunk=0
      echo "$0: INFO: wait $pid_list"

      for check_pid in $pid_list ; do
         if ! wait "$check_pid" ; then
            error "check_pid '$check_pid' failed!"
         fi
      done

      pid_list=""
   fi

done < "$allpages_file"
