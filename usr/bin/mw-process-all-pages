#!/bin/bash

error_out_maybe() {
   if [ "$wiki_error_on_fetch" = "true" ]; then
      ## error out
      return 1
   else
      ## ignore error
      return 0
   fi
}

echo "$0: START"

set -e

## example:
#[[ -v SOURCE_WIKI_URL ]] || SOURCE_WIKI_URL='https://www.whonix.org/w'
#[[ -v wiki_backup_folder ]] || wiki_backup_folder=~/mediawiki-shell/whonix-wiki-backup"

## These variables should be set by the calling script as environment variables.
[[ -v SOURCE_WIKI_URL ]] || missing_variable SOURCE_WIKI_URL
[[ -v wiki_backup_folder ]] || missing_variable wiki_backup_folder
[[ -v wiki_error_on_fetch ]] || wiki_error_on_fetch=true

## XXX
WIKI_URL="$SOURCE_WIKI_URL"
source /usr/share/mediawiki-shell/common

allpages_file="${TMPFOLDER}/allpages.txt"
rm -f "$allpages_file"

echo "$0: INFO: TMPFOLDER         : $TMPFOLDER"
echo "$0: INFO: wiki_backup_folder: $wiki_backup_folder"
echo "$0: INFO: SOURCE_WIKI_URL: $SOURCE_WIKI_URL"

mkdir -p "$wiki_backup_folder"

if ! test -d "$wiki_backup_folder" ; then
   echo "$0: ERROR: wiki_backup_folder '$wiki_backup_folder' does not exist! Run...?:"
   echo "mkdir --parents '$wiki_backup_folder'"
   exit 1
fi

if ! test -w "$wiki_backup_folder" ; then
   echo "$0: ERROR: wiki_backup_folder '$wiki_backup_folder' unwriteable! Run...?:"
   echo "chown --recursive '$USER:$USER' '$wiki_backup_folder'"
   exit 1
fi

# ## XXX
DESTINATION_WIKI_URL="$SOURCE_WIKI_URL"

## Not required for public wiki.
#mw-logout
#mw-login

QUERY_TYPE=allpages \
SOURCE_WIKI_URL="$SOURCE_WIKI_URL" \
   mw-all-pages "$allpages_file"

test -r "$allpages_file"

counter_total="$(cat "$allpages_file" | wc -l)"

counter_currently=0
counter_chunk=0
chunk_max_size=10
pid_list=""
while IFS=$'\n' read -r item_from_all_pages ; do
   counter_currently=$(( $counter_currently + 1 ))
   backup_page_item=$(set_backup_page_item "$item_from_all_pages")
   backup_filename_item=$(set_backup_filename_item "$backup_page_item")

   counter_chunk=$(( $counter_chunk + 1 ))
   echo "$counter_currently / $counter_total | counter_chunk: $counter_chunk | $backup_page_item | $backup_filename_item"

   TMPFOLDER_SEPARATE="$TMPFOLDER/separate/$counter_currently"
   mkdir --parents "$TMPFOLDER_SEPARATE"

   counter_currently="$counter_currently" \
   counter_chunk="$counter_chunk" \
   TMPFOLDER="$TMPFOLDER_SEPARATE" \
   WIKI_URL="$SOURCE_WIKI_URL" \
   backup_page_item="$backup_page_item" \
   wiki_backup_folder="$wiki_backup_folder" \
   backup_filename_item="$backup_filename_item" \
      mw-wiki-fetch-backup >/dev/null &

   pid="$!"
   pid_list+=" $pid"

   if [ "$counter_chunk" -ge "$chunk_max_size" ] || [ "$counter_currently" -ge "$counter_total" ] ; then
      counter_chunk=0
      echo "$0: INFO: wait $pid_list"

      for check_pid in $pid_list ; do
         if ! wait "$check_pid" ; then
            error "check_pid '$check_pid' failed!"
         fi
      done

      pid_list=""
   fi

done < "$allpages_file"
